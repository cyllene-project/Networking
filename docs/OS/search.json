{"Structs/Timer/SetFlags.html#/rawValue":{"name":"rawValue","parent_name":"SetFlags"},"Structs/Timer/SetFlags.html#/init(rawValue:)":{"name":"init(rawValue:)","parent_name":"SetFlags"},"Structs/Timer/SetFlags.html#/absTime":{"name":"absTime","parent_name":"SetFlags"},"Structs/Timer/Flags.html#/rawValue":{"name":"rawValue","parent_name":"Flags"},"Structs/Timer/Flags.html#/init(rawValue:)":{"name":"init(rawValue:)","parent_name":"Flags"},"Structs/Timer/Flags.html#/nonBlock":{"name":"nonBlock","parent_name":"Flags"},"Structs/Timer/Flags.html#/cloExec":{"name":"cloExec","parent_name":"Flags"},"Structs/Timer/Clock.html#/realTime":{"name":"realTime","parent_name":"Clock"},"Structs/Timer/Clock.html#/monotonic":{"name":"monotonic","parent_name":"Clock"},"Structs/Timer/Clock.html#/bootTime":{"name":"bootTime","parent_name":"Clock"},"Structs/Timer/Clock.html#/realTimeAlarm":{"name":"realTimeAlarm","parent_name":"Clock"},"Structs/Timer/Clock.html#/bootTimeAlarm":{"name":"bootTimeAlarm","parent_name":"Clock"},"Structs/Timer.html#/fileDescriptor":{"name":"fileDescriptor","abstract":"<p>The file descriptor for this timer.</p>","parent_name":"Timer"},"Structs/Timer.html#/init(using:flags:)":{"name":"init(using:flags:)","abstract":"<p>Creates a timer using the specified clock and configured with","parent_name":"Timer"},"Structs/Timer.html#/set(initial:thenEach:flags:)":{"name":"set(initial:thenEach:flags:)","abstract":"<p>Sets the timer to trigger on the initial delay, and then at the specified","parent_name":"Timer"},"Structs/Timer.html#/unset()":{"name":"unset()","abstract":"<p>Unsets the timer, so that it doesn&rsquo;t trigger anymore. Returns the previously","parent_name":"Timer"},"Structs/Timer.html#/get()":{"name":"get()","abstract":"<p>Returns the currently set timer delays.</p>","parent_name":"Timer"},"Structs/Timer.html#/expirations()":{"name":"expirations()","abstract":"<p>Returns the number of times the timer expired since the last call.</p>","parent_name":"Timer"},"Structs/Timer.html#/close()":{"name":"close()","abstract":"<p>Releases the resources for this file descriptor.</p>","parent_name":"Timer"},"Structs/Timer/Clock.html":{"name":"Clock","abstract":"<p>The type of clock to use for the timer.</p>","parent_name":"Timer"},"Structs/Timer/Flags.html":{"name":"Flags","abstract":"<p>The flags to configure the timer file descriptor.</p>","parent_name":"Timer"},"Structs/Timer/SetFlags.html":{"name":"SetFlags","abstract":"<p>The flags to configure how the delays set for the timer should be","parent_name":"Timer"},"Structs/SignalSet/BlockMode.html#/s:FOV2OS9SignalSet9BlockMode5blockFMS1_S1_":{"name":"block","abstract":"<p>Undocumented</p>","parent_name":"BlockMode"},"Structs/SignalSet/BlockMode.html#/s:FOV2OS9SignalSet9BlockMode7unblockFMS1_S1_":{"name":"unblock","abstract":"<p>Undocumented</p>","parent_name":"BlockMode"},"Structs/SignalSet/BlockMode.html#/s:FOV2OS9SignalSet9BlockMode7setMaskFMS1_S1_":{"name":"setMask","abstract":"<p>Undocumented</p>","parent_name":"BlockMode"},"Structs/SignalSet.html#/s:FV2OS9SignalSetcFzT4fillSb_S0_":{"name":"init(fill:)","abstract":"<p>Creates a SignalSet filled with all signals if fill is true,","parent_name":"SignalSet"},"Structs/SignalSet.html#/s:FV2OS9SignalSetcFzT6insertGSaOS_6Signal__S0_":{"name":"init(insert:)","abstract":"<p>Creates a SignalSet with just the specified signals inserted.</p>","parent_name":"SignalSet"},"Structs/SignalSet.html#/s:FV2OS9SignalSet6insertFzT6signalOS_6Signal_T_":{"name":"insert(signal:)","abstract":"<p>Inserts <code>signal</code> into the SignalSet.</p>","parent_name":"SignalSet"},"Structs/SignalSet.html#/s:FV2OS9SignalSet6removeFzT6signalOS_6Signal_T_":{"name":"remove(signal:)","abstract":"<p>Removes <code>signal</code> from the SignalSet.</p>","parent_name":"SignalSet"},"Structs/SignalSet.html#/s:FV2OS9SignalSet8containsFzT6signalOS_6Signal_Sb":{"name":"contains(signal:)","abstract":"<p>Returns true if the SignalSet contains <code>signal</code>.</p>","parent_name":"SignalSet"},"Structs/SignalSet.html#/s:FV2OS9SignalSet5blockFzT4modeOS0_9BlockMode_S0_":{"name":"block(mode:)","abstract":"<p>Blocks (or unblocks) the signals from this SignalSet,","parent_name":"SignalSet"},"Structs/SignalSet.html#/s:FV2OS9SignalSet9toCStructFT_Vs6UInt32":{"name":"toCStruct()","abstract":"<p>Returns the C sigset_t struct for this SignalSet.</p>","parent_name":"SignalSet"},"Structs/SignalSet.html#/fileDescriptor(replacing:flags:)":{"name":"fileDescriptor(replacing:flags:)","abstract":"<p>Linux only. Creates a SignalFileDescriptor for this SignalSet.","parent_name":"SignalSet"},"Structs/SignalSet/BlockMode.html":{"name":"BlockMode","abstract":"<p>BlockMode indicates the block mode for a SignalSet. See","parent_name":"SignalSet"},"Structs/SignalFileDescriptor.html#/fileDescriptor":{"name":"fileDescriptor","abstract":"<p>The file descriptor for the signal.</p>","parent_name":"SignalFileDescriptor"},"Structs/SignalFileDescriptor.html#/next()":{"name":"next()","abstract":"<p>Reads the next signal from the file descriptor. See signalfd(2) for details","parent_name":"SignalFileDescriptor"},"Structs/SignalFileDescriptor.html#/close()":{"name":"close()","abstract":"<p>Releases the resources for this file descriptor.</p>","parent_name":"SignalFileDescriptor"},"Structs/MessageError.html#/s:vV2OS12MessageError7messageSS":{"name":"message","abstract":"<p>The error message.</p>","parent_name":"MessageError"},"Structs/MessageError.html#/s:FV2OS12MessageErrorcFTSS7contextGVs10DictionarySSSS__S0_":{"name":"init(_:context:)","abstract":"<p>Creates a MessageError with the provided message and optional additional","parent_name":"MessageError"},"Structs/MessageError.html#/s:vV2OS12MessageError11descriptionSS":{"name":"description","abstract":"<p>The string representation of the error.</p>","parent_name":"MessageError"},"Structs/Event/Flags.html#/rawValue":{"name":"rawValue","parent_name":"Flags"},"Structs/Event/Flags.html#/init(rawValue:)":{"name":"init(rawValue:)","parent_name":"Flags"},"Structs/Event/Flags.html#/cloExec":{"name":"cloExec","parent_name":"Flags"},"Structs/Event/Flags.html#/nonBlock":{"name":"nonBlock","parent_name":"Flags"},"Structs/Event/Flags.html#/semaphore":{"name":"semaphore","parent_name":"Flags"},"Structs/Event.html#/fileDescriptor":{"name":"fileDescriptor","abstract":"<p>The file descriptor for this event.</p>","parent_name":"Event"},"Structs/Event.html#/init(initialValue:flags:)":{"name":"init(initialValue:flags:)","abstract":"<p>Creates an event file descriptor with the provided initial value and","parent_name":"Event"},"Structs/Event.html#/read()":{"name":"read()","abstract":"<p>Reads the current value from the file descriptor. See eventfd(2)","parent_name":"Event"},"Structs/Event.html#/write(_:)":{"name":"write(_:)","abstract":"<p>Adds the specified value to the event file descriptor. See","parent_name":"Event"},"Structs/Event.html#/close()":{"name":"close()","abstract":"<p>Releases the resource associated with this file descriptor.</p>","parent_name":"Event"},"Structs/Event/Flags.html":{"name":"Flags","abstract":"<p>Flags for the event file descriptor.</p>","parent_name":"Event"},"Structs/CError.html#/s:vV2OS6CError4codeVs5Int32":{"name":"code","abstract":"<p>The error code.</p>","parent_name":"CError"},"Structs/CError.html#/s:vV2OS6CError7messageSS":{"name":"message","abstract":"<p>The error message as returned by <code>strerror</code> or <code>gai_strerror</code>.</p>","parent_name":"CError"},"Structs/CError.html#/s:ZFV2OS6CError12makeAndThrowFzT14fromReturnCodeVs5Int3210errorValueS1__T_":{"name":"makeAndThrow(fromReturnCode:errorValue:)","abstract":"<p>Creates and throws the corresponding CError if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CError.html#/s:vV2OS6CError4codeVs5Int32\">code</a></code> is equal","parent_name":"CError"},"Structs/CError.html#/s:ZFV2OS6CError12makeAndThrowFzT9fromErrNoVs5Int32_T_":{"name":"makeAndThrow(fromErrNo:)","abstract":"<p>Creates and throws the corresponding CError if <code>errno</code> is not equal","parent_name":"CError"},"Structs/CError.html#/s:ZFV2OS6CError12makeAndThrowFzT11fromGAICodeVs5Int32_T_":{"name":"makeAndThrow(fromGAICode:)","abstract":"<p>Creates and throws the corresponding CError if <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CError.html#/s:vV2OS6CError4codeVs5Int32\">code</a></code> is not equal","parent_name":"CError"},"Structs/CError.html#/s:vV2OS6CError11descriptionSS":{"name":"description","abstract":"<p>The string description of the error.</p>","parent_name":"CError"},"Structs/CError.html":{"name":"CError","abstract":"<p>CError is an error thrown by a C system call. It may be from"},"Structs/Event.html":{"name":"Event","abstract":"<p>Event represents an event file descriptor as described in"},"Structs/MessageError.html":{"name":"MessageError","abstract":"<p>MessageError is a String-based error that can be created with additional"},"Structs/SignalFileDescriptor.html":{"name":"SignalFileDescriptor","abstract":"<p>SignalFileDescriptor is a file descriptor for a signal(s) as described in"},"Structs/SignalSet.html":{"name":"SignalSet","abstract":"<p>SignalSet is a set of signals.</p>"},"Structs/Timer.html":{"name":"Timer","abstract":"<p>Timer is a file descriptor associated with a timer. See"},"Protocols/FileDescriptor.html#/s:vP2OS14FileDescriptor14fileDescriptorVs5Int32":{"name":"fileDescriptor","abstract":"<p>Undocumented</p>","parent_name":"FileDescriptor"},"Protocols/Closable.html#/s:FP2OS8Closable5closeFzT_T_":{"name":"close()","abstract":"<p>Undocumented</p>","parent_name":"Closable"},"Protocols/Closable.html":{"name":"Closable","abstract":"<p>Any type that can (and typically must) be closed.</p>"},"Protocols/FileDescriptor.html":{"name":"FileDescriptor","abstract":"<p>Any resource that can be represented with a file descriptor. A file"},"Extensions/TimeInterval.html#/s:FE2OSSdcFT4fromVSC8timespec_Sd":{"name":"init(from:)","abstract":"<p>Creates a TimeInterval from a timespec C struct.</p>","parent_name":"TimeInterval"},"Extensions/TimeInterval.html#/s:FE2OSSdcFT4fromVSC7timeval_Sd":{"name":"init(from:)","abstract":"<p>Creates a TimeInterval from a timeval C struct.</p>","parent_name":"TimeInterval"},"Extensions/TimeInterval.html#/s:FE2OSSd10toTimeSpecFT_VSC8timespec":{"name":"toTimeSpec()","abstract":"<p>Returns a C timespec struct corresponding to this TimeInterval.</p>","parent_name":"TimeInterval"},"Extensions/TimeInterval.html#/s:FE2OSSd9toTimeValFT_VSC7timeval":{"name":"toTimeVal()","abstract":"<p>Returns a C timeval struct corresponding to this TimeInterval.</p>","parent_name":"TimeInterval"},"Extensions/SignalSet/Flags.html#/rawValue":{"name":"rawValue","parent_name":"Flags"},"Extensions/SignalSet/Flags.html#/init(rawValue:)":{"name":"init(rawValue:)","parent_name":"Flags"},"Extensions/SignalSet/Flags.html#/nonBlock":{"name":"nonBlock","parent_name":"Flags"},"Extensions/SignalSet/Flags.html#/cloExec":{"name":"cloExec","parent_name":"Flags"},"Extensions/SignalSet/Flags.html":{"name":"Flags","abstract":"<p>Linux only. Configure the file descriptor for a SignalSet.</p>","parent_name":"SignalSet"},"Extensions/Int32.html#/s:vE2OSVs5Int3214fileDescriptorS0_":{"name":"fileDescriptor","abstract":"<p>The file descriptor for an Int32 is the value of the Int32 itself.</p>","parent_name":"Int32"},"Extensions/Int32.html#/s:FE2OSVs5Int325closeFzT_T_":{"name":"close()","abstract":"<p>Releases the resource associated with this file descriptor.</p>","parent_name":"Int32"},"Extensions/Int32.html":{"name":"Int32"},"Extensions/SignalSet.html":{"name":"SignalSet"},"Extensions/TimeInterval.html":{"name":"TimeInterval"},"Enums/UserData.html#/s:FO2OS8UserData2fdFMS0_FVs5Int32S0_":{"name":"fd","abstract":"<p>A file descriptor.</p>","parent_name":"UserData"},"Enums/UserData.html#/s:FO2OS8UserData3u32FMS0_FVs6UInt32S0_":{"name":"u32","abstract":"<p>An UInt32.</p>","parent_name":"UserData"},"Enums/UserData.html#/s:FO2OS8UserData3u64FMS0_FVs6UInt64S0_":{"name":"u64","abstract":"<p>An UInt64.</p>","parent_name":"UserData"},"Enums/UserData.html#/s:FO2OS8UserData3ptrFMS0_FSvS0_":{"name":"ptr","abstract":"<p>A raw pointer.</p>","parent_name":"UserData"},"Enums/UserData.html#/s:FO2OS8UserDatacFT5asU32S0__GSqS0__":{"name":"init(asU32:)","abstract":"<p>Creates a UserData enum by converting the provided data value","parent_name":"UserData"},"Enums/UserData.html#/s:FO2OS8UserDatacFT4asFDS0__GSqS0__":{"name":"init(asFD:)","abstract":"<p>Creates a UserData enum by converting the provided data value","parent_name":"UserData"},"Enums/UserData.html#/s:FO2OS8UserDatacFT5asPtrS0__GSqS0__":{"name":"init(asPtr:)","abstract":"<p>Creates a UserData enum by casting the provided data value","parent_name":"UserData"},"Enums/UserData.html#/s:ZFO2OS8UserDataoi2eeFTS0_S0__Sb":{"name":"==(_:_:)","abstract":"<p>Equatable implementation for UserData.</p>","parent_name":"UserData"},"Enums/Signal.html#/s:FO2OS6Signal3hupFMS0_S0_":{"name":"hup","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal3intFMS0_S0_":{"name":"int","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4quitFMS0_S0_":{"name":"quit","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal3illFMS0_S0_":{"name":"ill","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4trapFMS0_S0_":{"name":"trap","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4abrtFMS0_S0_":{"name":"abrt","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal3fpeFMS0_S0_":{"name":"fpe","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4killFMS0_S0_":{"name":"kill","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal3busFMS0_S0_":{"name":"bus","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4segvFMS0_S0_":{"name":"segv","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal3sysFMS0_S0_":{"name":"sys","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4pipeFMS0_S0_":{"name":"pipe","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4alrmFMS0_S0_":{"name":"alrm","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4termFMS0_S0_":{"name":"term","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal3urgFMS0_S0_":{"name":"urg","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4stopFMS0_S0_":{"name":"stop","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4tstpFMS0_S0_":{"name":"tstp","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4contFMS0_S0_":{"name":"cont","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4chldFMS0_S0_":{"name":"chld","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4ttinFMS0_S0_":{"name":"ttin","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4ttouFMS0_S0_":{"name":"ttou","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal2ioFMS0_S0_":{"name":"io","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4xcpuFMS0_S0_":{"name":"xcpu","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4xfszFMS0_S0_":{"name":"xfsz","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal6vtalrmFMS0_S0_":{"name":"vtalrm","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4profFMS0_S0_":{"name":"prof","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal5winchFMS0_S0_":{"name":"winch","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4usr1FMS0_S0_":{"name":"usr1","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:FO2OS6Signal4usr2FMS0_S0_":{"name":"usr2","abstract":"<p>Undocumented</p>","parent_name":"Signal"},"Enums/Signal.html#/s:vO2OS6Signal5valueVs5Int32":{"name":"value","abstract":"<p>The value of the signal enum for the current platform.</p>","parent_name":"Signal"},"Enums/Signal.html":{"name":"Signal","abstract":"<p>The list of supported signals.</p>"},"Enums/UserData.html":{"name":"UserData","abstract":"<p>UserData represents the user data associated with an Epoll or Kqueue event.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}